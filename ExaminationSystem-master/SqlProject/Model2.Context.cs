

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace SqlProject
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class SQLProjectEntities3 : DbContext
{
    public SQLProjectEntities3()
        : base("name=SQLProjectEntities3")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<choice> choices { get; set; }

    public virtual DbSet<cours> courses { get; set; }

    public virtual DbSet<department> departments { get; set; }

    public virtual DbSet<exam> exams { get; set; }

    public virtual DbSet<instructor> instructors { get; set; }

    public virtual DbSet<question> questions { get; set; }

    public virtual DbSet<student_exam> student_exam { get; set; }

    public virtual DbSet<student> students { get; set; }

    public virtual DbSet<Students_exams_questions> Students_exams_questions { get; set; }

    public virtual DbSet<sysdiagram> sysdiagrams { get; set; }

    public virtual DbSet<topic> topics { get; set; }


    public virtual ObjectResult<string> AssignExamTOStudent(Nullable<int> examID, Nullable<int> stdID)
    {

        var examIDParameter = examID.HasValue ?
            new ObjectParameter("examID", examID) :
            new ObjectParameter("examID", typeof(int));


        var stdIDParameter = stdID.HasValue ?
            new ObjectParameter("stdID", stdID) :
            new ObjectParameter("stdID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AssignExamTOStudent", examIDParameter, stdIDParameter);
    }


    public virtual ObjectResult<string> correctExam(Nullable<int> examID, Nullable<int> stdID)
    {

        var examIDParameter = examID.HasValue ?
            new ObjectParameter("examID", examID) :
            new ObjectParameter("examID", typeof(int));


        var stdIDParameter = stdID.HasValue ?
            new ObjectParameter("stdID", stdID) :
            new ObjectParameter("stdID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("correctExam", examIDParameter, stdIDParameter);
    }


    public virtual ObjectResult<string> delete_choices(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("delete_choices", idParameter);
    }


    public virtual ObjectResult<string> delete_Course(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("delete_Course", idParameter);
    }


    public virtual ObjectResult<string> delete_Department(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("delete_Department", idParameter);
    }


    public virtual ObjectResult<string> delete_Exams(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("delete_Exams", idParameter);
    }


    public virtual ObjectResult<string> delete_instructor(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("delete_instructor", idParameter);
    }


    public virtual ObjectResult<string> delete_instructorCourse(Nullable<int> course_Id, Nullable<int> instructor_id)
    {

        var course_IdParameter = course_Id.HasValue ?
            new ObjectParameter("Course_Id", course_Id) :
            new ObjectParameter("Course_Id", typeof(int));


        var instructor_idParameter = instructor_id.HasValue ?
            new ObjectParameter("Instructor_id", instructor_id) :
            new ObjectParameter("Instructor_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("delete_instructorCourse", course_IdParameter, instructor_idParameter);
    }


    public virtual ObjectResult<string> delete_Questions(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("delete_Questions", idParameter);
    }


    public virtual ObjectResult<string> delete_Student(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("delete_Student", idParameter);
    }


    public virtual ObjectResult<string> delete_studentCourse(Nullable<int> course_Id, Nullable<int> student_id)
    {

        var course_IdParameter = course_Id.HasValue ?
            new ObjectParameter("Course_Id", course_Id) :
            new ObjectParameter("Course_Id", typeof(int));


        var student_idParameter = student_id.HasValue ?
            new ObjectParameter("Student_id", student_id) :
            new ObjectParameter("Student_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("delete_studentCourse", course_IdParameter, student_idParameter);
    }


    public virtual ObjectResult<string> delete_studentExam(Nullable<int> exam_Id, Nullable<int> student_id)
    {

        var exam_IdParameter = exam_Id.HasValue ?
            new ObjectParameter("Exam_Id", exam_Id) :
            new ObjectParameter("Exam_Id", typeof(int));


        var student_idParameter = student_id.HasValue ?
            new ObjectParameter("Student_id", student_id) :
            new ObjectParameter("Student_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("delete_studentExam", exam_IdParameter, student_idParameter);
    }


    public virtual ObjectResult<string> delete_studentExamQuestionByExamAndQuestion(Nullable<int> exam_Id, Nullable<int> question_ID)
    {

        var exam_IdParameter = exam_Id.HasValue ?
            new ObjectParameter("Exam_Id", exam_Id) :
            new ObjectParameter("Exam_Id", typeof(int));


        var question_IDParameter = question_ID.HasValue ?
            new ObjectParameter("question_ID", question_ID) :
            new ObjectParameter("question_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("delete_studentExamQuestionByExamAndQuestion", exam_IdParameter, question_IDParameter);
    }


    public virtual ObjectResult<string> delete_studentExamQuestionByExamAndStudent(Nullable<int> exam_Id, Nullable<int> student_id)
    {

        var exam_IdParameter = exam_Id.HasValue ?
            new ObjectParameter("Exam_Id", exam_Id) :
            new ObjectParameter("Exam_Id", typeof(int));


        var student_idParameter = student_id.HasValue ?
            new ObjectParameter("Student_id", student_id) :
            new ObjectParameter("Student_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("delete_studentExamQuestionByExamAndStudent", exam_IdParameter, student_idParameter);
    }


    public virtual ObjectResult<string> delete_Topics(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("delete_Topics", idParameter);
    }


    public virtual ObjectResult<string> exam_answers(Nullable<int> examID, Nullable<int> stdID, Nullable<int> questionRN, string stdAnswer)
    {

        var examIDParameter = examID.HasValue ?
            new ObjectParameter("examID", examID) :
            new ObjectParameter("examID", typeof(int));


        var stdIDParameter = stdID.HasValue ?
            new ObjectParameter("stdID", stdID) :
            new ObjectParameter("stdID", typeof(int));


        var questionRNParameter = questionRN.HasValue ?
            new ObjectParameter("QuestionRN", questionRN) :
            new ObjectParameter("QuestionRN", typeof(int));


        var stdAnswerParameter = stdAnswer != null ?
            new ObjectParameter("stdAnswer", stdAnswer) :
            new ObjectParameter("stdAnswer", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("exam_answers", examIDParameter, stdIDParameter, questionRNParameter, stdAnswerParameter);
    }


    public virtual ObjectResult<string> generateExam(string courseName, Nullable<int> tFnum, Nullable<int> mcqNum, Nullable<int> examDuration)
    {

        var courseNameParameter = courseName != null ?
            new ObjectParameter("courseName", courseName) :
            new ObjectParameter("courseName", typeof(string));


        var tFnumParameter = tFnum.HasValue ?
            new ObjectParameter("TFnum", tFnum) :
            new ObjectParameter("TFnum", typeof(int));


        var mcqNumParameter = mcqNum.HasValue ?
            new ObjectParameter("mcqNum", mcqNum) :
            new ObjectParameter("mcqNum", typeof(int));


        var examDurationParameter = examDuration.HasValue ?
            new ObjectParameter("examDuration", examDuration) :
            new ObjectParameter("examDuration", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("generateExam", courseNameParameter, tFnumParameter, mcqNumParameter, examDurationParameter);
    }


    public virtual int insert_choices(string qs_desc, string qs_isCorrect, Nullable<int> qs_ID)
    {

        var qs_descParameter = qs_desc != null ?
            new ObjectParameter("qs_desc", qs_desc) :
            new ObjectParameter("qs_desc", typeof(string));


        var qs_isCorrectParameter = qs_isCorrect != null ?
            new ObjectParameter("qs_isCorrect", qs_isCorrect) :
            new ObjectParameter("qs_isCorrect", typeof(string));


        var qs_IDParameter = qs_ID.HasValue ?
            new ObjectParameter("qs_ID", qs_ID) :
            new ObjectParameter("qs_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_choices", qs_descParameter, qs_isCorrectParameter, qs_IDParameter);
    }


    public virtual ObjectResult<string> insert_Course(string c_Name)
    {

        var c_NameParameter = c_Name != null ?
            new ObjectParameter("C_Name", c_Name) :
            new ObjectParameter("C_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insert_Course", c_NameParameter);
    }


    public virtual int insert_Department(string dept_Name, Nullable<int> supervisior_ID)
    {

        var dept_NameParameter = dept_Name != null ?
            new ObjectParameter("Dept_Name", dept_Name) :
            new ObjectParameter("Dept_Name", typeof(string));


        var supervisior_IDParameter = supervisior_ID.HasValue ?
            new ObjectParameter("supervisior_ID", supervisior_ID) :
            new ObjectParameter("supervisior_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_Department", dept_NameParameter, supervisior_IDParameter);
    }


    public virtual ObjectResult<string> insert_Exams(Nullable<int> course_id, Nullable<int> time)
    {

        var course_idParameter = course_id.HasValue ?
            new ObjectParameter("Course_id", course_id) :
            new ObjectParameter("Course_id", typeof(int));


        var timeParameter = time.HasValue ?
            new ObjectParameter("time", time) :
            new ObjectParameter("time", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insert_Exams", course_idParameter, timeParameter);
    }


    public virtual ObjectResult<string> insert_instructor(string userName, string pass, string name)
    {

        var userNameParameter = userName != null ?
            new ObjectParameter("userName", userName) :
            new ObjectParameter("userName", typeof(string));


        var passParameter = pass != null ?
            new ObjectParameter("pass", pass) :
            new ObjectParameter("pass", typeof(string));


        var nameParameter = name != null ?
            new ObjectParameter("name", name) :
            new ObjectParameter("name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insert_instructor", userNameParameter, passParameter, nameParameter);
    }


    public virtual int insert_instructorCourse(Nullable<int> course_Id, Nullable<int> instructor_id)
    {

        var course_IdParameter = course_Id.HasValue ?
            new ObjectParameter("Course_Id", course_Id) :
            new ObjectParameter("Course_Id", typeof(int));


        var instructor_idParameter = instructor_id.HasValue ?
            new ObjectParameter("Instructor_id", instructor_id) :
            new ObjectParameter("Instructor_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_instructorCourse", course_IdParameter, instructor_idParameter);
    }


    public virtual int insert_question(string qs_desc, string qs_type, Nullable<int> course_ID)
    {

        var qs_descParameter = qs_desc != null ?
            new ObjectParameter("qs_desc", qs_desc) :
            new ObjectParameter("qs_desc", typeof(string));


        var qs_typeParameter = qs_type != null ?
            new ObjectParameter("qs_type", qs_type) :
            new ObjectParameter("qs_type", typeof(string));


        var course_IDParameter = course_ID.HasValue ?
            new ObjectParameter("course_ID", course_ID) :
            new ObjectParameter("course_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_question", qs_descParameter, qs_typeParameter, course_IDParameter);
    }


    public virtual ObjectResult<string> insert_Student(string fname, string lname, Nullable<int> dep, string username, string pass)
    {

        var fnameParameter = fname != null ?
            new ObjectParameter("Fname", fname) :
            new ObjectParameter("Fname", typeof(string));


        var lnameParameter = lname != null ?
            new ObjectParameter("Lname", lname) :
            new ObjectParameter("Lname", typeof(string));


        var depParameter = dep.HasValue ?
            new ObjectParameter("Dep", dep) :
            new ObjectParameter("Dep", typeof(int));


        var usernameParameter = username != null ?
            new ObjectParameter("Username", username) :
            new ObjectParameter("Username", typeof(string));


        var passParameter = pass != null ?
            new ObjectParameter("pass", pass) :
            new ObjectParameter("pass", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insert_Student", fnameParameter, lnameParameter, depParameter, usernameParameter, passParameter);
    }


    public virtual int insert_studentCourse(Nullable<int> course_Id, Nullable<int> student_id)
    {

        var course_IdParameter = course_Id.HasValue ?
            new ObjectParameter("Course_Id", course_Id) :
            new ObjectParameter("Course_Id", typeof(int));


        var student_idParameter = student_id.HasValue ?
            new ObjectParameter("Student_id", student_id) :
            new ObjectParameter("Student_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_studentCourse", course_IdParameter, student_idParameter);
    }


    public virtual int insert_studentExam(Nullable<int> exam_Id, Nullable<int> student_id, Nullable<int> grade)
    {

        var exam_IdParameter = exam_Id.HasValue ?
            new ObjectParameter("Exam_Id", exam_Id) :
            new ObjectParameter("Exam_Id", typeof(int));


        var student_idParameter = student_id.HasValue ?
            new ObjectParameter("Student_id", student_id) :
            new ObjectParameter("Student_id", typeof(int));


        var gradeParameter = grade.HasValue ?
            new ObjectParameter("grade", grade) :
            new ObjectParameter("grade", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_studentExam", exam_IdParameter, student_idParameter, gradeParameter);
    }


    public virtual int insert_studentExamQuestion(Nullable<int> exam_Id, Nullable<int> student_id, Nullable<int> question_Id, string student_answer)
    {

        var exam_IdParameter = exam_Id.HasValue ?
            new ObjectParameter("Exam_Id", exam_Id) :
            new ObjectParameter("Exam_Id", typeof(int));


        var student_idParameter = student_id.HasValue ?
            new ObjectParameter("Student_id", student_id) :
            new ObjectParameter("Student_id", typeof(int));


        var question_IdParameter = question_Id.HasValue ?
            new ObjectParameter("Question_Id", question_Id) :
            new ObjectParameter("Question_Id", typeof(int));


        var student_answerParameter = student_answer != null ?
            new ObjectParameter("student_answer", student_answer) :
            new ObjectParameter("student_answer", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_studentExamQuestion", exam_IdParameter, student_idParameter, question_IdParameter, student_answerParameter);
    }


    public virtual ObjectResult<string> insert_Topics(Nullable<int> course_id, string t_name)
    {

        var course_idParameter = course_id.HasValue ?
            new ObjectParameter("Course_id", course_id) :
            new ObjectParameter("Course_id", typeof(int));


        var t_nameParameter = t_name != null ?
            new ObjectParameter("T_name", t_name) :
            new ObjectParameter("T_name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insert_Topics", course_idParameter, t_nameParameter);
    }


    public virtual ObjectResult<r1_student_info_for_each_department_Result> r1_student_info_for_each_department(Nullable<int> depID)
    {

        var depIDParameter = depID.HasValue ?
            new ObjectParameter("depID", depID) :
            new ObjectParameter("depID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<r1_student_info_for_each_department_Result>("r1_student_info_for_each_department", depIDParameter);
    }


    public virtual ObjectResult<r2_student_grades_Result> r2_student_grades(Nullable<int> student_ID)
    {

        var student_IDParameter = student_ID.HasValue ?
            new ObjectParameter("student_ID", student_ID) :
            new ObjectParameter("student_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<r2_student_grades_Result>("r2_student_grades", student_IDParameter);
    }


    public virtual ObjectResult<r3_instructor_courses_Result> r3_instructor_courses(Nullable<int> instructor_ID)
    {

        var instructor_IDParameter = instructor_ID.HasValue ?
            new ObjectParameter("instructor_ID", instructor_ID) :
            new ObjectParameter("instructor_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<r3_instructor_courses_Result>("r3_instructor_courses", instructor_IDParameter);
    }


    public virtual ObjectResult<string> r4_course_topics(Nullable<int> course_ID)
    {

        var course_IDParameter = course_ID.HasValue ?
            new ObjectParameter("course_ID", course_ID) :
            new ObjectParameter("course_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("r4_course_topics", course_IDParameter);
    }


    public virtual ObjectResult<r5_exam_questions_Result> r5_exam_questions(Nullable<int> exam_ID)
    {

        var exam_IDParameter = exam_ID.HasValue ?
            new ObjectParameter("exam_ID", exam_ID) :
            new ObjectParameter("exam_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<r5_exam_questions_Result>("r5_exam_questions", exam_IDParameter);
    }


    public virtual int r6_student_exam(Nullable<int> exam_ID, Nullable<int> student_ID)
    {

        var exam_IDParameter = exam_ID.HasValue ?
            new ObjectParameter("exam_ID", exam_ID) :
            new ObjectParameter("exam_ID", typeof(int));


        var student_IDParameter = student_ID.HasValue ?
            new ObjectParameter("student_ID", student_ID) :
            new ObjectParameter("student_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("r6_student_exam", exam_IDParameter, student_IDParameter);
    }


    public virtual ObjectResult<select_choices_Result> select_choices(string id)
    {

        var idParameter = id != null ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_choices_Result>("select_choices", idParameter);
    }


    public virtual int select_Course(string selectedData)
    {

        var selectedDataParameter = selectedData != null ?
            new ObjectParameter("selectedData", selectedData) :
            new ObjectParameter("selectedData", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("select_Course", selectedDataParameter);
    }


    public virtual ObjectResult<select_department_Result> select_department(string id)
    {

        var idParameter = id != null ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_department_Result>("select_department", idParameter);
    }


    public virtual int select_Exams(string selectedData)
    {

        var selectedDataParameter = selectedData != null ?
            new ObjectParameter("selectedData", selectedData) :
            new ObjectParameter("selectedData", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("select_Exams", selectedDataParameter);
    }


    public virtual int select_Instructor(string selectedData)
    {

        var selectedDataParameter = selectedData != null ?
            new ObjectParameter("selectedData", selectedData) :
            new ObjectParameter("selectedData", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("select_Instructor", selectedDataParameter);
    }


    public virtual ObjectResult<select_instructorCourseByCourse_Result> select_instructorCourseByCourse(string course_Id)
    {

        var course_IdParameter = course_Id != null ?
            new ObjectParameter("Course_Id", course_Id) :
            new ObjectParameter("Course_Id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_instructorCourseByCourse_Result>("select_instructorCourseByCourse", course_IdParameter);
    }


    public virtual ObjectResult<select_instructorCourseByInstructor_Result> select_instructorCourseByInstructor(string instructor_id)
    {

        var instructor_idParameter = instructor_id != null ?
            new ObjectParameter("Instructor_id", instructor_id) :
            new ObjectParameter("Instructor_id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_instructorCourseByInstructor_Result>("select_instructorCourseByInstructor", instructor_idParameter);
    }


    public virtual ObjectResult<select_Questions_Result> select_Questions(string id)
    {

        var idParameter = id != null ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_Questions_Result>("select_Questions", idParameter);
    }


    public virtual ObjectResult<select_Student_Result> select_Student(string id)
    {

        var idParameter = id != null ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_Student_Result>("select_Student", idParameter);
    }


    public virtual ObjectResult<select_studentCourseByCourse_Result> select_studentCourseByCourse(string course_Id)
    {

        var course_IdParameter = course_Id != null ?
            new ObjectParameter("Course_Id", course_Id) :
            new ObjectParameter("Course_Id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_studentCourseByCourse_Result>("select_studentCourseByCourse", course_IdParameter);
    }


    public virtual ObjectResult<select_studentCourseByStudent_Result> select_studentCourseByStudent(string student_id)
    {

        var student_idParameter = student_id != null ?
            new ObjectParameter("Student_id", student_id) :
            new ObjectParameter("Student_id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_studentCourseByStudent_Result>("select_studentCourseByStudent", student_idParameter);
    }


    public virtual ObjectResult<select_studentExamByExam_Result> select_studentExamByExam(string exam_Id)
    {

        var exam_IdParameter = exam_Id != null ?
            new ObjectParameter("Exam_Id", exam_Id) :
            new ObjectParameter("Exam_Id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_studentExamByExam_Result>("select_studentExamByExam", exam_IdParameter);
    }


    public virtual int select_studentExamByExamAndStudebt(Nullable<int> exam_Id, Nullable<int> student_Id)
    {

        var exam_IdParameter = exam_Id.HasValue ?
            new ObjectParameter("Exam_Id", exam_Id) :
            new ObjectParameter("Exam_Id", typeof(int));


        var student_IdParameter = student_Id.HasValue ?
            new ObjectParameter("student_Id", student_Id) :
            new ObjectParameter("student_Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("select_studentExamByExamAndStudebt", exam_IdParameter, student_IdParameter);
    }


    public virtual ObjectResult<select_studentExamByStudent_Result> select_studentExamByStudent(string student_id)
    {

        var student_idParameter = student_id != null ?
            new ObjectParameter("Student_id", student_id) :
            new ObjectParameter("Student_id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_studentExamByStudent_Result>("select_studentExamByStudent", student_idParameter);
    }


    public virtual ObjectResult<select_studentExamQuestionByExam_Result> select_studentExamQuestionByExam(string exam_Id)
    {

        var exam_IdParameter = exam_Id != null ?
            new ObjectParameter("Exam_Id", exam_Id) :
            new ObjectParameter("Exam_Id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_studentExamQuestionByExam_Result>("select_studentExamQuestionByExam", exam_IdParameter);
    }


    public virtual int select_studentExamQuestionByExamAndStudent(Nullable<int> exam_Id, Nullable<int> student_Id)
    {

        var exam_IdParameter = exam_Id.HasValue ?
            new ObjectParameter("Exam_Id", exam_Id) :
            new ObjectParameter("Exam_Id", typeof(int));


        var student_IdParameter = student_Id.HasValue ?
            new ObjectParameter("student_Id", student_Id) :
            new ObjectParameter("student_Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("select_studentExamQuestionByExamAndStudent", exam_IdParameter, student_IdParameter);
    }


    public virtual ObjectResult<select_studentExamQuestionByStudent_Result> select_studentExamQuestionByStudent(string student_id)
    {

        var student_idParameter = student_id != null ?
            new ObjectParameter("Student_id", student_id) :
            new ObjectParameter("Student_id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_studentExamQuestionByStudent_Result>("select_studentExamQuestionByStudent", student_idParameter);
    }


    public virtual int select_Topics(string selectedData)
    {

        var selectedDataParameter = selectedData != null ?
            new ObjectParameter("selectedData", selectedData) :
            new ObjectParameter("selectedData", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("select_Topics", selectedDataParameter);
    }


    public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
    }


    public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var new_diagramnameParameter = new_diagramname != null ?
            new ObjectParameter("new_diagramname", new_diagramname) :
            new ObjectParameter("new_diagramname", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
    }


    public virtual int sp_upgraddiagrams()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
    }


    public virtual ObjectResult<string> update_choices(Nullable<int> id, string qs_desc, string qs_isCorrect, Nullable<int> qs_ID)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var qs_descParameter = qs_desc != null ?
            new ObjectParameter("qs_desc", qs_desc) :
            new ObjectParameter("qs_desc", typeof(string));


        var qs_isCorrectParameter = qs_isCorrect != null ?
            new ObjectParameter("qs_isCorrect", qs_isCorrect) :
            new ObjectParameter("qs_isCorrect", typeof(string));


        var qs_IDParameter = qs_ID.HasValue ?
            new ObjectParameter("qs_ID", qs_ID) :
            new ObjectParameter("qs_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_choices", idParameter, qs_descParameter, qs_isCorrectParameter, qs_IDParameter);
    }


    public virtual ObjectResult<string> update_Course(Nullable<int> id, string c_Name)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var c_NameParameter = c_Name != null ?
            new ObjectParameter("C_Name", c_Name) :
            new ObjectParameter("C_Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_Course", idParameter, c_NameParameter);
    }


    public virtual ObjectResult<string> update_Department(Nullable<int> id, string name, Nullable<int> supervisior_ID)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var nameParameter = name != null ?
            new ObjectParameter("name", name) :
            new ObjectParameter("name", typeof(string));


        var supervisior_IDParameter = supervisior_ID.HasValue ?
            new ObjectParameter("supervisior_ID", supervisior_ID) :
            new ObjectParameter("supervisior_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_Department", idParameter, nameParameter, supervisior_IDParameter);
    }


    public virtual ObjectResult<string> update_Exams(Nullable<int> e_id, Nullable<int> course_id, Nullable<int> time)
    {

        var e_idParameter = e_id.HasValue ?
            new ObjectParameter("E_id", e_id) :
            new ObjectParameter("E_id", typeof(int));


        var course_idParameter = course_id.HasValue ?
            new ObjectParameter("Course_id", course_id) :
            new ObjectParameter("Course_id", typeof(int));


        var timeParameter = time.HasValue ?
            new ObjectParameter("time", time) :
            new ObjectParameter("time", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_Exams", e_idParameter, course_idParameter, timeParameter);
    }


    public virtual ObjectResult<string> update_Instructor(Nullable<int> id, string name, string username, string pass)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var nameParameter = name != null ?
            new ObjectParameter("name", name) :
            new ObjectParameter("name", typeof(string));


        var usernameParameter = username != null ?
            new ObjectParameter("username", username) :
            new ObjectParameter("username", typeof(string));


        var passParameter = pass != null ?
            new ObjectParameter("pass", pass) :
            new ObjectParameter("pass", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_Instructor", idParameter, nameParameter, usernameParameter, passParameter);
    }


    public virtual ObjectResult<string> update_questions(Nullable<int> id, string qs_desc, string qs_type, Nullable<int> course_ID)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var qs_descParameter = qs_desc != null ?
            new ObjectParameter("qs_desc", qs_desc) :
            new ObjectParameter("qs_desc", typeof(string));


        var qs_typeParameter = qs_type != null ?
            new ObjectParameter("qs_type", qs_type) :
            new ObjectParameter("qs_type", typeof(string));


        var course_IDParameter = course_ID.HasValue ?
            new ObjectParameter("course_ID", course_ID) :
            new ObjectParameter("course_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_questions", idParameter, qs_descParameter, qs_typeParameter, course_IDParameter);
    }


    public virtual ObjectResult<string> update_Student(Nullable<int> id, string fname, string lname, string username, string pass)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var fnameParameter = fname != null ?
            new ObjectParameter("Fname", fname) :
            new ObjectParameter("Fname", typeof(string));


        var lnameParameter = lname != null ?
            new ObjectParameter("Lname", lname) :
            new ObjectParameter("Lname", typeof(string));


        var usernameParameter = username != null ?
            new ObjectParameter("Username", username) :
            new ObjectParameter("Username", typeof(string));


        var passParameter = pass != null ?
            new ObjectParameter("pass", pass) :
            new ObjectParameter("pass", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_Student", idParameter, fnameParameter, lnameParameter, usernameParameter, passParameter);
    }


    public virtual ObjectResult<string> update_studentExam(Nullable<int> student_id, Nullable<int> exam_ID, Nullable<int> grade)
    {

        var student_idParameter = student_id.HasValue ?
            new ObjectParameter("Student_id", student_id) :
            new ObjectParameter("Student_id", typeof(int));


        var exam_IDParameter = exam_ID.HasValue ?
            new ObjectParameter("Exam_ID", exam_ID) :
            new ObjectParameter("Exam_ID", typeof(int));


        var gradeParameter = grade.HasValue ?
            new ObjectParameter("grade", grade) :
            new ObjectParameter("grade", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_studentExam", student_idParameter, exam_IDParameter, gradeParameter);
    }


    public virtual ObjectResult<string> update_studentExamQuestion(Nullable<int> student_id, Nullable<int> exam_ID, Nullable<int> question_Id, string student_answer)
    {

        var student_idParameter = student_id.HasValue ?
            new ObjectParameter("Student_id", student_id) :
            new ObjectParameter("Student_id", typeof(int));


        var exam_IDParameter = exam_ID.HasValue ?
            new ObjectParameter("Exam_ID", exam_ID) :
            new ObjectParameter("Exam_ID", typeof(int));


        var question_IdParameter = question_Id.HasValue ?
            new ObjectParameter("Question_Id", question_Id) :
            new ObjectParameter("Question_Id", typeof(int));


        var student_answerParameter = student_answer != null ?
            new ObjectParameter("student_answer", student_answer) :
            new ObjectParameter("student_answer", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_studentExamQuestion", student_idParameter, exam_IDParameter, question_IdParameter, student_answerParameter);
    }


    public virtual ObjectResult<string> update_Topics(Nullable<int> e_id, Nullable<int> course_id, string t_name)
    {

        var e_idParameter = e_id.HasValue ?
            new ObjectParameter("E_id", e_id) :
            new ObjectParameter("E_id", typeof(int));


        var course_idParameter = course_id.HasValue ?
            new ObjectParameter("Course_id", course_id) :
            new ObjectParameter("Course_id", typeof(int));


        var t_nameParameter = t_name != null ?
            new ObjectParameter("T_name", t_name) :
            new ObjectParameter("T_name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_Topics", e_idParameter, course_idParameter, t_nameParameter);
    }

}

}

